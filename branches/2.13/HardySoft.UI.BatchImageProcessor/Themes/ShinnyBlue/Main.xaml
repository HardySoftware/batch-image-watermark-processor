<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:marks="clr-namespace:HardySoft.UI.BatchImageProcessor.Classes.MarkExtensions"
	xmlns:vsm="clr-namespace:System.Windows;assembly=WPFToolkit"
	>
	<!-- Brush for menu bar and tool bar background -->
	<LinearGradientBrush x:Key="ToolBarBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FF4F6FA2" Offset="0" />
			<GradientStop Color="#FF4267A2" Offset="0.185" />
			<GradientStop Color="#FF26477B" Offset="0.475" />
			<GradientStop Color="#FF14315F" Offset="1" />
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<!-- Brush for menu / tool bar text foreground color-->
	<SolidColorBrush x:Key="ToobarTextColorBrush" Color="#FFEBEBEB"></SolidColorBrush>

	<!-- Brush for disabled menu / tool bar text foreground color-->
	<SolidColorBrush x:Key="ToobarDisabledTextColorBrush" Color="#C3C3C3"></SolidColorBrush>

	<!-- Brush for hilighted menu / tool bar item background color-->
	<LinearGradientBrush x:Key="ToobarHilightBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#FF14315F" Offset="0" />
			<GradientStop Color="#FF26477B" Offset="0.185" />
			<GradientStop Color="#FF4267A2" Offset="0.475" />
			<GradientStop Color="#FF4F6FA2" Offset="1" />
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	
	<SolidColorBrush x:Key="NormalBorderBrush" Color="#FF053365" />
	<SolidColorBrush x:Key="NormalBrush" Color="#FF9AA8BA" />
	<LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
		<GradientStop Color="#4C000000" Offset="0" />
		<GradientStop Color="#26FFFFFF" Offset="1" />
		<GradientStop Color="#4C000000" Offset="0.467" />
		<GradientStop Color="#26FFFFFF" Offset="0.479" />
	</LinearGradientBrush>
	
	<!-- Brush for selected item, e.g. dropdown item which is selected -->
	<LinearGradientBrush x:Key="SelectedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFFFFFFF"/>
		<GradientStop Color="#FF3EA2EE" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TextBrush" Color="#FF052035" />
	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FF787878" />
	<LinearGradientBrush x:Key="HoverShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
		<GradientStop Color="#4CCEEAFC" Offset="0" />
		<GradientStop Color="#26CEEAFC" Offset="0.467" />
		<GradientStop Color="#00CEEAFC" Offset="0.475" />
		<GradientStop Color="#00CEEAFC" Offset="0.856" />
		<GradientStop Color="#26CEEAFC" Offset="1" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#444" Offset="0.0" />
		<GradientStop Color="#888" Offset="1.0" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ControlBackgroundBrush" Color="#FFA7D4F7" />

	<SolidColorBrush x:Key="SliderNormalBrush" Color="#FF353F4F" />
	<SolidColorBrush x:Key="SliderNormalBorderBrush" Color="#FF202630" />
	<SolidColorBrush x:Key="SliderHoverBrush" Color="#FF2A3340" />
	<LinearGradientBrush x:Key="SliderPressedBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
		<GradientStop Color="#4CE0E4EA" Offset="0" />
		<GradientStop Color="#26202630" Offset="1" />
		<GradientStop Color="#4CE0E4EA" Offset="0.467" />
		<GradientStop Color="#26202630" Offset="0.479" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="SliderDisabledBackgroundBrush" Color="#FF787878" />
	<LinearGradientBrush x:Key="SliderShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
		<GradientStop Color="#59E0E4EA" Offset="0" />
		<GradientStop Color="#00E0E4EA" Offset="1" />
		<GradientStop Color="#26E0E4EA" Offset="0.467" />
		<GradientStop Color="#00E0E4EA" Offset="0.475" />
	</LinearGradientBrush>

	<SolidColorBrush x:Key="GlyphBrush" Color="#FFABC8F7" />
	<SolidColorBrush x:Key="HoverBrush" Color="#FF083E6A" />
	<LinearGradientBrush x:Key="ShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
		<GradientStop Color="#59E0E4EA" Offset="0" />
		<GradientStop Color="#26E0E4EA" Offset="0.467" />
		<GradientStop Color="#00E0E4EA" Offset="0.475" />
		<GradientStop Color="#00E0E4EA" Offset="1" />
	</LinearGradientBrush>
	
	<SolidColorBrush x:Key="TextDropShadowColorBrush" Color="#FF24A4CE" />

	<!-- Borderless window round corner background -->
	<Style x:Key="WindowBackground" TargetType="Border">
		<Setter Property="BorderBrush" Value="#395984"></Setter>
		<Setter Property="BorderThickness" Value="3"></Setter>
		<Setter Property="CornerRadius" Value="0,20,30,40"></Setter>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush>
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="#FFD1D1D1" Offset="0.0"/>
							<GradientStop Color="#FF8496AA" Offset="0.5"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="WindowBackgroundImage" TargetType="Grid">
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush Color="Transparent"></SolidColorBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Borderless window title bar -->
	<Style x:Key="WindowTitle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="AliceBlue"></Setter>
		<Setter Property="Margin" Value="1"></Setter>
		<Setter Property="Padding" Value="5"></Setter>
		<Setter Property="TextAlignment" Value="Left"></Setter>
		<Setter Property="FontSize" Value="16"></Setter>
		<Setter Property="FontWeight" Value="Bold"></Setter>
		<Setter Property="FontFamily" Value="{marks:ResourceFontExtension Style_WindowTitleFont}"></Setter>
		<Setter Property="TextTrimming" Value="None"></Setter>
		<Setter Property="TextDecorations" Value="None"></Setter>
		<Setter Property="BitmapEffect">
			<Setter.Value>
				<DropShadowBitmapEffect Opacity="1.0" 
					Color="{Binding Source={StaticResource TextDropShadowColorBrush}, Path=Color}" Direction="320" ShadowDepth="5" Softness="0.2"/>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Borderless window footer text, for project file name -->
	<Style x:Key="WindowFooter" TargetType="TextBlock">
		<Setter Property="Foreground" Value="AliceBlue"></Setter>
		<Setter Property="FontSize" Value="12"></Setter>
		<Setter Property="FontFamily" Value="{marks:ResourceFontExtension Style_WindowFooterFont}"></Setter>
	</Style>
	
	<!-- sub-title bar -->
	<Style x:Key="SubTitle" TargetType="TextBlock">
		<Setter Property="Margin" Value="1"></Setter>
		<Setter Property="Padding" Value="5"></Setter>
		<Setter Property="TextAlignment" Value="Left"></Setter>
		<Setter Property="FontSize" Value="15"></Setter>
		<Setter Property="FontWeight" Value="Bold"></Setter>
		<Setter Property="FontFamily" Value="{marks:ResourceFontExtension Style_WindowTitleFont}"></Setter>
		<Setter Property="TextBlock.BitmapEffect">
			<Setter.Value>
				<OuterGlowBitmapEffect GlowSize="5.0" GlowColor="#0B2D8B" Opacity="1.0"/>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Label for configuration area within tab control -->
	<Style x:Key="ConfigSectionLabel" TargetType="{x:Type TextBlock}">
		<Setter Property="TextBlock.FontFamily" Value="{marks:ResourceFontExtension Style_ConfigLabel}"></Setter>
		<Setter Property="TextBlock.FontSize" Value="12"></Setter>
		<Setter Property="TextBlock.FontWeight" Value="Semibold"></Setter>
		<Setter Property="TextBlock.Foreground" Value="#D6E0FC"></Setter>
		<Setter Property="VerticalAlignment" Value="Center"></Setter>
		<Setter Property="TextBlock.BitmapEffect">
			<Setter.Value>
				<OuterGlowBitmapEffect GlowSize="5.0" GlowColor="#0B2D8B" Opacity="1.0"/>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Value for about window -->
	<Style x:Key="AboutWindowText" TargetType="{x:Type TextBlock}">
		<Setter Property="TextBlock.FontFamily" Value="{marks:ResourceFontExtension Style_AboutText}"></Setter>
		<Setter Property="TextBlock.FontSize" Value="14"></Setter>
		<Setter Property="TextBlock.Foreground" Value="White"></Setter>
	</Style>

	<!-- Help Popup window -->
	<Style x:Key="HelpPopupStyle" TargetType="Border">
		<Setter Property="BorderBrush" Value="#395984"></Setter>
		<Setter Property="BorderThickness" Value="3"></Setter>
		<Setter Property="CornerRadius" Value="10,10,10,10"></Setter>
		<Setter Property="Background" Value="#FFFBF8C7"></Setter>
	</Style>
	
	<!-- ===================== -->
	<!-- Begin of Glass Button -->
	<!-- ===================== -->
	<Style TargetType="Button" x:Key="GlassButton">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="FrameworkElement.Width" Value="NaN"/>
		<Setter Property="FrameworkElement.MinWidth" Value="60"/>
		<Setter Property="FrameworkElement.Height" Value="NaN"/>
		<Setter Property="FrameworkElement.MinHeight" Value="25"/>
		<Setter Property="Control.Padding" Value="10,4,10,4"/>
		<Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
		<Setter Property="TextElement.Foreground">
			<Setter.Value>
				<SolidColorBrush>White</SolidColorBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="TextElement.FontSize" Value="10"/>
		<Setter Property="TextElement.FontWeight" Value="SemiBold"/>
		<Setter Property="TextElement.FontFamily" Value="{marks:ResourceFontExtension Style_ButtonFont}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Timeline1">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="Timeline2">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
						<Border x:Name="border" Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="0.507*"/>
									<RowDefinition Height="0.493*"/>
								</Grid.RowDefinitions>
								<Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
													<SkewTransform AngleX="0" AngleY="0"/>
													<RotateTransform Angle="0"/>
													<TranslateTransform X="-0.368" Y="-0.152"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#B28DBDFF" Offset="0"/>
											<GradientStop Color="#008DBDFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
									Width="Auto" Grid.RowSpan="2" Margin="5,0,5,0"/>
								<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
									<Border.Background>
										<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
											<GradientStop Color="#99FFFFFF" Offset="0"/>
											<GradientStop Color="#33FFFFFF" Offset="1"/>
										</LinearGradientBrush>
									</Border.Background>
								</Border>
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="shine" Value="0.4"/>
							<Setter Property="Background" TargetName="border" Value="#CC000000"/>
							<Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="shine" Value="0.8"/>
							<Setter Property="Background" TargetName="border" Value="#EE555555"/>
							<Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
							<Setter Property="TextElement.Foreground">
								<Setter.Value>
									<SolidColorBrush>#FFDDDDDD</SolidColorBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- =================== -->
	<!-- End of Glass Button -->
	<!-- =================== -->

	<!-- Button to display help -->
	<Style TargetType="Button" x:Key="HelpButton">
		<Setter Property="Cursor" Value="Help"/>
		<Setter Property="Margin" Value="5,0,5,0"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Image Source="/SeaTurtle;component/Themes/ShinnyBlue/Images/HelpPopup/help_icon.gif"></Image>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="BitmapEffect">
					<Setter.Value>
						<BlurBitmapEffect KernelType="Gaussian" Radius="4"></BlurBitmapEffect>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Close Button inside Help Popup -->
	<Style TargetType="Button" x:Key="CloseHelpButton">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Margin" Value="5,5,5,0"/>
		<Setter Property="Height" Value="10"/>
		<Setter Property="Width" Value="10"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Image Source="/SeaTurtle;component/Themes/DarkCool/Images/HelpPopup/close_icon.gif"></Image>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- ========================== -->
	<!-- Begin of Flat Style Button -->
	<!-- ========================== -->
	<ControlTemplate x:Key="FlatImageButton" TargetType="{x:Type Button}">
		<Border x:Name="RoundedBorder" Cursor="Hand" CornerRadius="5" BorderThickness="2" Background="Transparent"
			BorderBrush="{StaticResource NormalBorderBrush}" ToolTip="{TemplateBinding ToolTip}">
			<ContentPresenter Margin="5,2,5,2"></ContentPresenter>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" TargetName="RoundedBorder" Value="{StaticResource HoverShineBrush}" />
				<Setter Property="Opacity" TargetName="RoundedBorder" Value="1"/>
				<Setter Property="BorderBrush" TargetName="RoundedBorder" Value="{StaticResource NormalBorderBrush}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" TargetName="RoundedBorder" Value="{StaticResource DisabledBackgroundBrush}"/>
				<Setter Property="Cursor" TargetName="RoundedBorder" Value="Arrow"/>
				<Setter Property="Effect" TargetName="RoundedBorder">
					<Setter.Value>
						<BlurEffect Radius="2"/>
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- ======================== -->
	<!-- End of Flat Style Button -->
	<!-- ======================== -->

	<!-- Hyperlink color -->
	<Style x:Key="AboutWindowHyperlink" TargetType="Hyperlink">
		<Setter Property="Foreground" Value="White"></Setter>
	</Style>

	<!--=====================-->
	<!-- Begin of Menu Style -->
	<!--=====================-->
	<!-- Menu -->
	<Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Foreground" Value="{StaticResource ToobarTextColorBrush}"/>
		<Setter Property="FontFamily" Value="{marks:ResourceFontExtension Style_MenuFont}"/>
		<Setter Property="FontSize" Value="15"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border BorderBrush="#404040" BorderThickness="1" Background="{StaticResource ToolBarBackgroundBrush}" >
						<StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- MenuItem Separator -->
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1"/>
		<Setter Property="Margin" Value="0,4,0,4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<StackPanel>
						<Rectangle Height="1" Fill="#FF111111" />
						<Rectangle Height="1" Fill="#FF666666" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TopLevelHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" >
			<Grid>
				<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
				<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}"
					AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
					<Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="#FF2B4367"
						BorderBrush="#888888" BorderThickness="1" >
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource ToobarHilightBackgroundBrush}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
				<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource ToobarDisabledTextColorBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- TopLevelItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" >
			<Grid>
				<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="#FF8C8C8C"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#4F6FA2"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" >
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
				<Border Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" 
					Background="#FF4F4F4F" BorderThickness="1" BorderBrush="#2B4367">
					<Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" 
						Stroke="#404040" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
				</Border>
				<ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
				<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}"
					Margin="5,2,0,2" DockPanel.Dock="Right" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsCheckable" Value="true">
				<Setter TargetName="Check" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="#FF869EC4"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="#888888"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
				<ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
				<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}"
						Margin="5,2,2,2" DockPanel.Dock="Right"/>
				<Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"
						Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="#404040" />
				<Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}"
						AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
					<Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="#FF4F4F4F"
							BorderBrush="#888888" BorderThickness="1" >
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="#FF8C8C8C"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
				<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="#888888"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem Style -->
	<Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
				<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--===================-->
	<!-- End of Menu Style -->
	<!--===================-->

	<!--======================-->
	<!-- Begin of Tab Control -->
	<!--======================-->
	<Style TargetType="{x:Type TabItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Border Name="Border" BorderBrush="Black" 
						BorderThickness="1,1,1,1" CornerRadius="6,6,0,0">
						<Border.Background>
							<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
								<LinearGradientBrush.GradientStops>
									<GradientStop Color="#08BFE8" Offset="0" />
									<GradientStop Color="#045B6E" Offset="1"></GradientStop>
								</LinearGradientBrush.GradientStops>
							</LinearGradientBrush>
						</Border.Background>
						<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
							HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2"/>
					</Border>
					<ControlTemplate.Triggers>
						<!--<Trigger Property="IsEnabled" Value="True">
							<Setter Property="TabItem.Foreground" Value="Red"></Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TabItem.Foreground" Value="Blue"></Setter>
						</Trigger>-->
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="TabItem.Foreground" Value="White"></Setter>
						</Trigger>
						<Trigger Property="IsSelected" Value="False">
							<Setter Property="TabItem.Foreground" Value="#DCDCDC"></Setter>
							<Setter TargetName="Border" Property="Background">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
										<LinearGradientBrush.GradientStops>
											<GradientStop Color="#D3D3D3" Offset="0" />
											<GradientStop Color="#686868" Offset="1"></GradientStop>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--====================-->
	<!-- End of Tab Control -->
	<!--====================-->

	<!-- Button for configuration area within tab control -->
	<!--
	<Style TargetType="Button" x:Key="FunctionButton">
		<Setter Property="FrameworkElement.Width" Value="NaN"/>
		<Setter Property="FrameworkElement.MinWidth" Value="40"/>
		<Setter Property="FrameworkElement.Height" Value="NaN"/>
		<Setter Property="FrameworkElement.MinHeight" Value="15"/>
		<Setter Property="Control.Padding" Value="10,4,10,4"/>
		<Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
		<Setter Property="TextElement.Foreground">
			<Setter.Value>
				<SolidColorBrush>#DCDCDC</SolidColorBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="TextElement.FontSize" Value="12"/>
		<Setter Property="TextElement.FontWeight" Value="SemiBold"/>
		<Setter Property="TextElement.FontFamily" Value="{marks:ResourceFontExtension Style_ButtonFont}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="#00FFFFFF">
						<Border BorderBrush="#FF000000" CornerRadius="6,6,6,6" BorderThickness="1,1,0,0" Opacity="0.9">
							<Border.BitmapEffect>
								<BlurBitmapEffect Radius="1" />
							</Border.BitmapEffect>
						</Border>
						<Border BorderBrush="#FFFFFFFF" CornerRadius="6,6,6,6" BorderThickness="0,0,0.6,0.6" Opacity="0.7" />
						<Border Margin="1,1,1,1" CornerRadius="6,6,6,6" Name="background">
							<Border.Background>
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<LinearGradientBrush.GradientStops>
										<GradientStop Offset="0" Color="#4000F0" />
										<GradientStop Offset="1" Color="#1000A0" />
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Border.Background>
							<Grid Margin="1,1,1,1" ClipToBounds="True">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Ellipse Margin="10,3,10,3" Width="{TemplateBinding FrameworkElement.Width}" Fill="#FFFFFFFF" Opacity="0.3" Grid.Row="0" Grid.RowSpan="2">
									<Ellipse.BitmapEffect>
										<BlurBitmapEffect />
									</Ellipse.BitmapEffect>
								</Ellipse>
								<Ellipse Width="{TemplateBinding FrameworkElement.Width}" Fill="#FFFFFFFF" Opacity="0.34" Grid.Row="0" />
							</Grid>
						</Border>
						<Border Margin="1,1,1,1" BorderBrush="#FFFFFFFF" CornerRadius="6,6,6,6" BorderThickness="5,5,0,0" Opacity="0.3">
							<Border.BitmapEffect>
								<BlurBitmapEffect Radius="1" />
							</Border.BitmapEffect>
						</Border>
						<Border Margin="1,1,1,1" BorderBrush="#FF000000" CornerRadius="6,6,6,6" BorderThickness="0,0,0.6,0.6" Opacity="1">
							<Border.BitmapEffect>
								<BlurBitmapEffect Radius="1" />
							</Border.BitmapEffect>
						</Border>
						<ContentPresenter Margin="{TemplateBinding Control.Padding}"
							HorizontalAlignment="Center" VerticalAlignment="Center"
							ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
							Content="{TemplateBinding ContentControl.Content}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<Storyboard.Children>
											<ColorAnimation To="#4000F0" FillBehavior="HoldEnd" Duration="00:00:00.4000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[0].(GradientStop.Color)" />
											<ColorAnimation To="#1000A0" FillBehavior="HoldEnd" Duration="00:00:00.4000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[1].(GradientStop.Color)" />
										</Storyboard.Children>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<Storyboard.Children>
											<ColorAnimation To="#927AFF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[0].(GradientStop.Color)" />
											<ColorAnimation To="#234BFF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[1].(GradientStop.Color)" />
										</Storyboard.Children>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="ButtonBase.IsPressed" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<Storyboard.Children>
											<ColorAnimation To="#927AFF" FillBehavior="Stop" Duration="00:00:00.4000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[0].(GradientStop.Color)" />
											<ColorAnimation To="#234BFF" FillBehavior="Stop" Duration="00:00:00.4000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[1].(GradientStop.Color)" />
										</Storyboard.Children>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<Storyboard.Children>
											<ColorAnimation To="#6E5CBF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[0].(GradientStop.Color)" />
											<ColorAnimation To="#251F40" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[1].(GradientStop.Color)" />
										</Storyboard.Children>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	-->

	<!-- List control for file selection -->
	<DataTemplate x:Key="lvFileList">
		<Border Margin="5" BorderThickness="1" BorderBrush="SteelBlue" CornerRadius="4">
			<Grid Margin="3">
				<Grid.ColumnDefinitions>
					<ColumnDefinition></ColumnDefinition>
					<ColumnDefinition Width="10*"></ColumnDefinition>
				</Grid.ColumnDefinitions>

				<CheckBox Grid.Column="0" IsChecked="{Binding Path=FileSelected}"></CheckBox>

				<TextBlock Grid.Column="1" Text="{Binding Path=FilePath}">
					<TextBlock.ToolTip>
						<StackPanel>
							<Image Width="100" Stretch="Fill" Source="{Binding Path=FilePath}"></Image>
						</StackPanel>
					</TextBlock.ToolTip>
				</TextBlock>
			</Grid>
		</Border>
	</DataTemplate>

	<!-- Textboxes for configurations -->
	<Style x:Key="cfgTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
		<Setter Property="FontFamily" Value="{marks:ResourceFontExtension Style_ConfigTextBox}" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="MinWidth" Value="250"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="RootElement">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="ReadOnly" />
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Disabled" />
									<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
									<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value=".7" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="ReadOnly">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border x:Name="Border" Opacity="1" BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,2,2"
							Background="{TemplateBinding Background}">
							<Grid>
								<Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#72F7F7F7" />
								<Border BorderThickness="1">
									<ScrollViewer BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" x:Name="PART_ContentHost" />
								</Border>
							</Grid>
						</Border>
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0"
							Background="{StaticResource DisabledBackgroundBrush}"
							BorderBrush="{StaticResource DisabledBackgroundBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" />
						<Border x:Name="HoverBorder" IsHitTestVisible="False" Opacity="0"
							BorderBrush="{StaticResource GlyphBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,2,2" />
						<Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0"
							BorderBrush="{StaticResource HoverShineBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,2,2" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Style of GridView Header -->
	<Style x:Key="GridViewHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
					<LinearGradientBrush.GradientStops>
						<GradientStop Color="#424E62" Offset="0" />
						<GradientStop Color="#C8CFDA" Offset="1" />
					</LinearGradientBrush.GradientStops>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="True">
				<Setter Property="Foreground" Value="White"></Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#C0C0C0"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Style of Sortable GridView Up Arrow -->
	<DataTemplate x:Key="HeaderTemplateArrowUp">
		<DockPanel>
			<TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
			<Path x:Name="arrow" StrokeThickness="1" Fill="#B9B9B9" Data="M 5,10 L 15,10 L 10,5 L 5,10"/>
		</DockPanel>
	</DataTemplate>

	<!-- Style of Sortable GridView Down Arrow -->
	<DataTemplate x:Key="HeaderTemplateArrowDown">
		<DockPanel>
			<TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
			<Path x:Name="arrow" StrokeThickness="1" Fill="#B9B9B9" Data = "M 5,5 L 10,10 L 15,5 L 5,5"/>
		</DockPanel>
	</DataTemplate>

	<!-- Style of GridView Transparent Header -->
	<DataTemplate x:Key="HeaderTemplateTransparent">
		<DockPanel>
			<TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
			<Path x:Name="arrow" StrokeThickness="1" Fill="Transparent" Data="M 5,5 L 10,10 L 15,5 L 5,5"/>
		</DockPanel>
	</DataTemplate>

	<!-- Style of GridView Line Styles, including Alternate lines -->
	<Style x:Key="AlternatingListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
		<Style.Triggers>
			<Trigger Property="ItemsControl.AlternationIndex" Value="0">
				<Setter Property="Background" Value="#FFABCDF7"></Setter>
			</Trigger>
			<Trigger Property="ItemsControl.AlternationIndex" Value="1">
				<Setter Property="Background" Value="#FFA9E9F9"></Setter>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Background" Value="#FFF4FABE"></Setter>
			</Trigger>
		</Style.Triggers>
		<!--
		<Setter Property="ToolTip">
			<Setter.Value>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition></ColumnDefinition>
						<ColumnDefinition></ColumnDefinition>
					</Grid.ColumnDefinitions>

					<GridSplitter Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="15" Background="Transparent" ShowsPreview="True"/>
				</Grid>
			</Setter.Value>
		</Setter>
		-->
	</Style>

	<!-- ================= -->
	<!-- Style of Combobox -->
	<!-- ================= -->

	<!-- ComboBox Toggle Button -->
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid TextBlock.Foreground="Black" TextBlock.FontSize="25">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition Width="20"/>
			</Grid.ColumnDefinitions>
			<Rectangle x:Name="Rectangle"
				Grid.ColumnSpan="2"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Width="Auto" Height="Auto"
				RadiusX="5" RadiusY="5"
				TextBlock.Foreground="Black">
				<Rectangle.Fill>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#E0E4EA" Offset="0.0"/>
						<GradientStop Color="#202630" Offset="1.0"/>
					</LinearGradientBrush>
				</Rectangle.Fill>
				<Rectangle.Stroke>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#CCC" Offset="0.0"/>
						<GradientStop Color="#444" Offset="1.0"/>
					</LinearGradientBrush>
				</Rectangle.Stroke>
			</Rectangle>
			<Rectangle Grid.Column="0"
				HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
				Width="Auto" Height="Auto"
				RadiusX="5" RadiusY="5"
				TextBlock.Foreground="Black">
				<Rectangle.Fill>
					<SolidColorBrush Color="Transparent"/>
				</Rectangle.Fill>
				<Rectangle.Stroke>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#CCC" Offset="0.0"/>
						<GradientStop Color="#444" Offset="1.0"/>
					</LinearGradientBrush>
				</Rectangle.Stroke>
			</Rectangle>
			<Path x:Name="Arrow"
				Grid.Column="1"
				HorizontalAlignment="Center" VerticalAlignment="Center"
				Data="M 0 0 L 4 4 L 8 0 Z">
				<Path.Fill>
					<SolidColorBrush Color="#444"/>
				</Path.Fill>
			</Path>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Fill" TargetName="Rectangle">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
							<GradientStop Color="#FFF" Offset="0.0"/>
							<GradientStop Color="#AAA" Offset="1.0"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Fill" TargetName="Rectangle">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
							<GradientStop Color="#BBB" Offset="0.0"/>
							<GradientStop Color="#EEE" Offset="0.1"/>
							<GradientStop Color="#EEE" Offset="0.9"/>
							<GradientStop Color="#FFF" Offset="1.0"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Fill" TargetName="Rectangle">
					<Setter.Value>
						<SolidColorBrush Color="#EEE"/>
					</Setter.Value>
				</Setter>
				<Setter Property="Stroke" TargetName="Rectangle">
					<Setter.Value>
						<SolidColorBrush Color="#AAA"/>
					</Setter.Value>
				</Setter>
				<Setter Property="Foreground">
					<Setter.Value>
						<SolidColorBrush Color="#888"/>
					</Setter.Value>
				</Setter>
				<Setter Property="Fill" TargetName="Arrow">
					<Setter.Value>
						<SolidColorBrush Color="#888"/>
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ComboBox TextBox -->
	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<!-- This must be named as PART_ContentHost -->
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
	</ControlTemplate>

	<Style TargetType="ComboBox">
		<Setter Property="Padding" Value="6,2,25,2" />
		<Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
		<Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
		<!--<Setter Property="ItemContainerStyle" Value="{StaticResource System.Windows.Controls.ComboBoxItem}"/>-->

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Grid.Resources>
							<Style TargetType="ToggleButton" x:Name="comboToggleStyle">
								<Setter Property="Foreground" Value="#FF333333" />
								<Setter Property="Background" Value="#FF1F3B53" />
								<Setter Property="BorderBrush">
									<Setter.Value>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FFA3AEB9" Offset="0" />
											<GradientStop Color="#FF8399A9" Offset="0.375" />
											<GradientStop Color="#FF718597" Offset="0.375" />
											<GradientStop Color="#FF617584" Offset="1" />
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter Property="BorderThickness" Value="1" />
								<Setter Property="Padding" Value="3" />
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ToggleButton">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition />
													<ColumnDefinition Width="20" />
												</Grid.ColumnDefinitions>
												<vsm:VisualStateManager.VisualStateGroups>
													<vsm:VisualStateGroup x:Name="CommonStates">
														<vsm:VisualStateGroup.Transitions>
															<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
															<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed" />
															<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
															<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
															<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver" />
															<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed" />
														</vsm:VisualStateGroup.Transitions>
														<vsm:VisualState x:Name="Normal" />
														<vsm:VisualState x:Name="MouseOver">
															<Storyboard>

																<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
																	<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
																	<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
																</DoubleAnimationUsingKeyFrames>

															</Storyboard>
														</vsm:VisualState>
														<vsm:VisualState x:Name="Pressed">
															<Storyboard>

																<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
																	<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
																</DoubleAnimationUsingKeyFrames>

															</Storyboard>
														</vsm:VisualState>
														<vsm:VisualState x:Name="Disabled">
															<Storyboard />
														</vsm:VisualState>
													</vsm:VisualStateGroup>
													<vsm:VisualStateGroup x:Name="CheckStates">
														<vsm:VisualState x:Name="Checked">
															<Storyboard />
														</vsm:VisualState>
														<vsm:VisualState x:Name="Unchecked" />
													</vsm:VisualStateGroup>
												</vsm:VisualStateManager.VisualStateGroups>
												<Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="3" RadiusY="3" Grid.ColumnSpan="2" />
												<Rectangle x:Name="ButtonRectangle" Fill="{StaticResource NormalBrush}" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="3" RadiusY="3" Grid.Column="1" Margin="1,1,1,1" />
												<Rectangle x:Name="ButtonShineRectangle" Fill="{StaticResource ShineBrush}" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="3" RadiusY="3" Margin="1,1,1,1" Grid.Column="1" />
												<Rectangle x:Name="HoverRectangle" Opacity="0" Fill="{StaticResource HoverBrush}" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="3" RadiusY="3" Grid.Column="1" Margin="1,1,1,1" />
												<Rectangle x:Name="HoverShineRectangle" Fill="{StaticResource HoverShineBrush}" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="3" RadiusY="3" Margin="1,1,1,1" Opacity="0" Grid.Column="1" />
												<Rectangle x:Name="PressedRectangle" Opacity="0" Fill="{StaticResource PressedBrush}" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="3" RadiusY="3" Margin="1,1,1,1" Grid.Column="1" />
												<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
												<Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Fill="#A5FFFFFF" RadiusX="3" RadiusY="3" />
												<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" RadiusX="3.5" RadiusY="3.5" Grid.ColumnSpan="2" />
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Grid.Resources>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" />
									<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
									<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="MouseOver" />
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border x:Name="ContentPresenterBorder">
							<Grid>
								<ToggleButton HorizontalAlignment="Stretch" Margin="-1" x:Name="DropDownToggle" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Right" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
									<Path Height="4" HorizontalAlignment="Right" Margin="0,0,-17,0" x:Name="BtnArrow" Width="8" Stretch="Uniform" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Fill="{StaticResource GlyphBrush}" />
								</ToggleButton>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ContentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>
							</Grid>
						</Border>
						<Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Fill="#A5FFFFFF" RadiusX="3" RadiusY="3" Margin="-1,-1,-1,-1" />
						<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" RadiusX="3" RadiusY="3" Margin="-1,-1,-1,-1" />
						<Popup x:Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}">
							<Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
								<Border Height="Auto" HorizontalAlignment="Stretch" x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Background="{StaticResource ControlBackgroundBrush}">
									<ScrollViewer BorderThickness="0" Padding="1" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
										<ItemsPresenter />
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
	</Style>

	<!-- ComboBoxItem -->
	<Style TargetType="ComboBoxItem">
		<Setter Property="Padding" Value="3" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Grid Margin="1,1,1,1" Background="{TemplateBinding Background}">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
									<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
											Duration="00:00:00.0010000"
											Storyboard.TargetName="HoverRectangle"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="SelectionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition From="Unselected" GeneratedDuration="00:00:00.3000000" To="Selected" />
									<vsm:VisualTransition From="Selected" GeneratedDuration="00:00:00.5000000" To="Unselected" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Unselected" />
								<vsm:VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
											Storyboard.TargetName="SelectedRectangle"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="Background" IsHitTestVisible="False" Opacity="0.25"
							Fill="{StaticResource NormalBrush}" RadiusX="1" RadiusY="1" />
						<Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0"
							Fill="{StaticResource NormalBrush}" RadiusX="1" RadiusY="1" />
						<Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0"
							Fill="{StaticResource SelectedBackgroundBrush}" RadiusX="1" RadiusY="1" />
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}" />
						<Rectangle x:Name="FocusVisualElement" Visibility="Collapsed"
							Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
	</Style>
	<!-- ======================== -->
	<!-- End of Style of Combobox -->
	<!-- ======================== -->

	<!-- ================= -->
	<!-- Style of Checkbox -->
	<!-- ================= -->
	<Style TargetType="CheckBox">
		<Setter Property="Background" Value="{StaticResource NormalBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Padding" Value="4,1,0,0" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed" />
									<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
									<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver" />
									<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="CheckStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition From="Checked" GeneratedDuration="00:00:00.5000000" To="Unchecked" />
									<vsm:VisualTransition From="Unchecked" GeneratedDuration="00:00:00.3000000" To="Checked" />
									<vsm:VisualTransition From="Checked" GeneratedDuration="00:00:00.3000000" To="Indeterminate" />
									<vsm:VisualTransition From="Indeterminate" GeneratedDuration="00:00:00.5000000" To="Unchecked" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unchecked" />
								<vsm:VisualState x:Name="Indeterminate">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="16" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
							<Rectangle Height="14" Margin="1" x:Name="Background" Width="14" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
							<Rectangle Height="14" Margin="1" x:Name="BackgroundOverlay" Width="14" Opacity="0" Fill="{x:Null}" Stroke="{StaticResource HoverBrush}" StrokeThickness="2" />
							<Rectangle Height="16" x:Name="PressedRectangle" Width="16" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverBrush}" StrokeThickness="1" />
							<Path Height="10" Margin="1,1,0,1.5" x:Name="CheckIcon" Width="10.5" Opacity="0" Fill="{StaticResource GlyphBrush}" Stretch="Fill" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" />
							<Rectangle Height="8" x:Name="IndeterminateIcon" Width="10" Opacity="0" Fill="{StaticResource GlyphBrush}" />
							<Rectangle Height="14" x:Name="DisabledVisualElement" Width="14" Opacity="0" Fill="{StaticResource DisabledBackgroundBrush}" />
							<Rectangle Height="16" x:Name="ContentFocusVisualElement" Width="16" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" />
							<Rectangle Height="12" x:Name="ShineRectangle" Width="14" IsHitTestVisible="false" Opacity="1" Stroke="{x:Null}" StrokeThickness="1" Fill="{StaticResource ShineBrush}" Margin="2,2,2,2" />
						</Grid>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ======================== -->
	<!-- End of Style of Checkbox -->
	<!-- ======================== -->

	<!-- ==================== -->
	<!-- Begin of ProgressBar -->
	<!-- ==================== -->
	<Style TargetType="ProgressBar">
		<Setter Property="Foreground" Value="{StaticResource NormalBrush}" />
		<Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Maximum" Value="100" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="BorderBrush" Value="{StaticResource GlyphBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ProgressBar">
					<Grid x:Name="Root">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Determinate" />
								<vsm:VisualState x:Name="Indeterminate">
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border x:Name="PART_Track" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<Grid x:Name="ProgressBarRootGrid">
							<Rectangle Margin="{TemplateBinding BorderThickness}" x:Name="ProgressBarRootGradient" Canvas.ZIndex="1" RadiusX="1.5" RadiusY="1.5" Stroke="#FFFFFFFF" StrokeThickness="1" Opacity="0">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
										<GradientStop Color="#B2FFFFFF" Offset="0" />
										<GradientStop Color="#C6FFFFFF" Offset="0.15" />
										<GradientStop Color="#D1FFFFFF" Offset="0.275" />
										<GradientStop Color="#C6FFFFFF" Offset="0.4" />
										<GradientStop Color="#BFFFFFFF" Offset="0.65" />
										<GradientStop Color="#A5FFFFFF" Offset="0.75" />
										<GradientStop Color="#91FFFFFF" Offset="0.85" />
										<GradientStop Color="#72FFFFFF" Offset="1" />
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
								<Rectangle Margin="{TemplateBinding BorderThickness}" x:Name="IndeterminateSolidFill" Opacity="1" RenderTransformOrigin="0.5,0.5" RadiusX="2" RadiusY="2" Fill="{TemplateBinding Foreground}" Stroke="#FF448DCA" StrokeThickness="0" />
								<Rectangle Margin="{TemplateBinding BorderThickness}" x:Name="IndeterminateGradientFill" RadiusX="2" RadiusY="2" StrokeThickness="1">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.508,1.394" StartPoint="0.401,-0.394" SpreadMethod="Repeat">
											<GradientStop Color="#00FFFFFF" />
											<GradientStop Color="#FEA1A1A1" Offset="1" />
											<GradientStop Color="#00FEFEFE" Offset="0.517" />
											<GradientStop Color="#FEA1A1A1" Offset="0.517" />
											<LinearGradientBrush.Transform>
												<TransformGroup>
													<TranslateTransform X="0" />
												</TransformGroup>
											</LinearGradientBrush.Transform>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
							</Grid>
							<Grid Margin="1" x:Name="DeterminateRoot">
								<Rectangle HorizontalAlignment="Left" Margin="{TemplateBinding BorderThickness}" x:Name="PART_Indicator" RadiusX="1.5" RadiusY="1.5" Fill="{TemplateBinding Foreground}" StrokeThickness="0.5" />
							</Grid>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsIndeterminate" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard RepeatBehavior="Forever">
										<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X">
											<SplineDoubleKeyFrame KeyTime="0" Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:2.4" Value="145" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ================== -->
	<!-- End of ProgressBar -->
	<!-- ================== -->

	<!-- ======================= -->
	<!-- Begin of GroupBox Style -->
	<!-- ======================= -->
	<LinearGradientBrush x:Key="GroupBoxNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#626262" Offset="1"/>
		<GradientStop Color="#4c4c4c" Offset="0"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="GroupBoxHeaderBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#6c6a6b" Offset="0"/>
		<GradientStop Color="#282828" Offset="1"/>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="GroupBoxNormalOuterBorder" Color="#7a7a7a"/>

	<LinearGradientBrush x:Key="GroupBoxGlassBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#96FFFFFF" Offset="0"/>
		<GradientStop Color="#28FFFFFF" Offset="0.5"/>
		<GradientStop Color="#00FFFFFF" Offset="0.5"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="GroupBoxDisabledBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#f4f4f4" Offset="1"/>
		<GradientStop Color="#c2c2c2" Offset="0"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="GroupBoxDisabledHeaderBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#f4f4f4" Offset="0"/>
		<GradientStop Color="#d7d7d7" Offset="0.7"/>
		<GradientStop Color="#c2c2c2" Offset="1"/>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="GroupBoxOuterBorderDisabled" Color="#cfcfcf"/>

	<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

	<Style TargetType="{x:Type GroupBox}">
		<Setter Property="BorderBrush" Value="#D5DFE5"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Margin" Value="4"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Border x:Name="Header" Grid.Column="0" Grid.Row="0"
							Padding="3" Background="{StaticResource GroupBoxHeaderBackground}"
							CornerRadius="4,4,0,0" BorderBrush="{StaticResource GroupBoxNormalOuterBorder}"
							BorderThickness="1,1,1,0">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								ContentSource="Header" RecognizesAccessKey="True"/>
						</Border>
						<Border x:Name="Glass" Grid.Column="0" Grid.Row="0" Margin="2"
							Background="{StaticResource GroupBoxGlassBrush}" CornerRadius="4,4,0,0"/>
						<Border x:Name="Container" Grid.Column="0" Grid.Row="1" Padding="3"
							CornerRadius="0,0,4,4" Background="{StaticResource GroupBoxNormalBackground}"
							BorderBrush="{StaticResource GroupBoxNormalOuterBorder}" BorderThickness="1,1,1,1">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								Margin="{TemplateBinding Padding}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Header" Property="Background"
								Value="{StaticResource GroupBoxDisabledHeaderBackground}"/>
							<Setter TargetName="Container" Property="Background"
								Value="{StaticResource GroupBoxDisabledBackground}"/>
							<Setter Property="Foreground" Value="{StaticResource GroupBoxNormalOuterBorder}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ======================= -->
	<!-- End of GroupBox Style -->
	<!-- ======================= -->

	<!-- ===================== -->
	<!-- Begin of Slider Style -->
	<!-- ===================== -->
	<Style TargetType="Thumb">
		<Setter Property="Background" Value="{StaticResource SliderNormalBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="BorderBrush" Value="{StaticResource SliderNormalBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Grid>
						<Border x:Name="Background" Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<Border x:Name="HoverBorder" Opacity="0" Background="{StaticResource SliderHoverBrush}" 
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<Border x:Name="HoverShineBorder" Opacity="0" Background="{StaticResource HoverShineBrush}" 
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<Border x:Name="PressedBorder" Opacity="0" BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" 
							Background="{StaticResource SliderPressedBrush}" />
						<Border x:Name="ShineBorder" BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" 
							Background="{StaticResource SliderShineBrush}" Opacity="1" />
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="false" 
							Background="{StaticResource SliderDisabledBackgroundBrush}" 
							CornerRadius="3.5,3.5,3.5,3.5" Opacity="0" />
						<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" 
							BorderBrush="{StaticResource HoverShineBrush}" BorderThickness="1" 
							CornerRadius="3,3,3,3" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Slider">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Maximum" Value="10" />
		<Setter Property="Minimum" Value="0" />
		<Setter Property="Value" Value="0" />
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0" />
					<GradientStop Color="#FF8399A9" Offset="0.375" />
					<GradientStop Color="#FF718597" Offset="0.375" />
					<GradientStop Color="#FF617584" Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Slider">
					<Grid x:Name="Root">
						<Grid.Resources>
							<ControlTemplate x:Key="RepeatButtonTemplate">
								<Grid x:Name="Root" Opacity="0" Background="Transparent" />
							</ControlTemplate>
						</Grid.Resources>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="MouseOver" />
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalTemplate" Background="{TemplateBinding Background}">
							<Rectangle Height="5" Margin="5,0,5,0" Fill="{StaticResource NormalBorderBrush}" Stroke="{x:Null}" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="2" RadiusY="2" />

							<Track x:Name="PART_Track">
								<Track.Thumb>
									<Thumb Height="16" x:Name="HorizontalThumb" Width="30" IsTabStop="True" />
								</Track.Thumb>
								<Track.IncreaseRepeatButton>
									<RepeatButton IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Command="Slider.IncreaseLarge" />
								</Track.IncreaseRepeatButton>
								<Track.DecreaseRepeatButton>
									<RepeatButton IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Command="Slider.DecreaseLarge" />
								</Track.DecreaseRepeatButton>
							</Track>
						</Grid>
						<Grid x:Name="VerticalTemplate" Visibility="Collapsed" Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Rectangle Margin="0,5,0,5" Width="5" Grid.Row="0" Grid.RowSpan="3" Fill="{StaticResource NormalBorderBrush}" Stroke="{x:Null}" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="2" RadiusY="2" />

							<RepeatButton x:Name="VerticalTrackLargeChangeDecreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Row="2" />
							<Thumb Height="30" x:Name="VerticalThumb" Width="16" IsTabStop="True" Grid.Row="1"/>
							<!-- Style="{StaticResource System.Windows.Controls.Primitives.Thumb}" /> -->
							<RepeatButton x:Name="VerticalTrackLargeChangeIncreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Row="0" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- =================== -->
	<!-- End of Slider Style -->
	<!-- =================== -->

	<!-- ======================== -->
	<!-- Begin of ScrollBar Style -->
	<!-- ======================== -->
	<Style TargetType="ScrollBar">
		<Setter Property="MinWidth" Value="17" />
		<Setter Property="MinHeight" Value="17" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollBar">
					<Grid x:Name="Root">
						<Grid.Resources>
							<ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root" Background="Transparent">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualState x:Name="Normal" />
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
												<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed" />
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal" />
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Path Height="10" Width="9" Stretch="Uniform" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " Fill="{StaticResource GlyphBrush}" x:Name="path" />
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
												<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed" />
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal" />
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Path Height="10" Width="9" Stretch="Uniform" Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z " x:Name="path" Fill="{StaticResource GlyphBrush}" />
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
												<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed" />
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal" />
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Path x:Name="path" Height="10" Width="9" Stretch="Uniform" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " Fill="{StaticResource GlyphBrush}" />
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
												<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed" />
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal" />
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Path x:Name="path" Height="10" Width="9" Stretch="Uniform" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Fill="{StaticResource GlyphBrush}" />
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
								<Grid>
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal" />
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="0" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Grid Margin="1,0,1,0" x:Name="ThumbVisual">
										<Rectangle x:Name="Background" Fill="{StaticResource GlyphBrush}" StrokeThickness="1" RadiusX="3" RadiusY="4" Stroke="{x:Null}" Margin="4.5,-2,5,-2" />
									</Grid>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
								<Grid>
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
												<vsm:VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
												<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver" />
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed" />
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal" />
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="0" />
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.1" />
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Grid Margin="0,1,0,1" x:Name="ThumbVisual">
										<Rectangle x:Name="Background" Fill="{StaticResource GlyphBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2" Stroke="{x:Null}" Margin="-2,3.5,-2,4" />
									</Grid>
								</Grid>
							</ControlTemplate>
						</Grid.Resources>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="MouseOver" />
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalRoot" Visibility="Collapsed" >
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Rectangle Grid.ColumnSpan="5" Stroke="#00000000" StrokeThickness="1" RadiusX="1" RadiusY="1" Fill="{StaticResource NormalBrush}" />
							<RepeatButton Margin="1" x:Name="HorizontalSmallDecrease" Width="16" IsTabStop="False" Template="{StaticResource HorizontalDecrementTemplate}" Grid.Column="0" Interval="50" />
							<RepeatButton x:Name="HorizontalLargeDecrease" Width="0" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Column="1" Interval="50" />
							<Thumb MinWidth="18" x:Name="HorizontalThumb" Width="18" Background="{TemplateBinding Background}" Template="{StaticResource HorizontalThumbTemplate}" Grid.Column="2" />
							<RepeatButton x:Name="HorizontalLargeIncrease" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Column="3" Interval="50" />
							<RepeatButton Margin="1" x:Name="HorizontalSmallIncrease" Width="16" IsTabStop="False" Template="{StaticResource HorizontalIncrementTemplate}" Grid.Column="4" Interval="50" />
						</Grid>
						<Grid x:Name="VerticalRoot" Visibility="Visible">
							<Grid.RowDefinitions>
								<RowDefinition Height="16" />
								<RowDefinition Height="*" />
								<RowDefinition Height="16" />
							</Grid.RowDefinitions>
							<Rectangle Grid.RowSpan="5" Stroke="#00000000" StrokeThickness="1" RadiusX="1" RadiusY="1" Fill="{StaticResource NormalBrush}" />

							<RepeatButton Height="16" Margin="1" x:Name="VerticalSmallDecrease" IsTabStop="False" Template="{StaticResource VerticalDecrementTemplate}" Grid.Row="0" Interval="50" Command="ScrollBar.LineUpCommand" />

							<Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
								<Track.Thumb>
									<Thumb MinHeight="18" x:Name="VerticalThumb" Template="{StaticResource VerticalThumbTemplate}" />
								</Track.Thumb>
								<Track.IncreaseRepeatButton>
									<RepeatButton IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Command="ScrollBar.PageDownCommand" Interval="50" />
								</Track.IncreaseRepeatButton>
								<Track.DecreaseRepeatButton>
									<RepeatButton IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Command="ScrollBar.PageUpCommand" Interval="50" />
								</Track.DecreaseRepeatButton>
							</Track>
							<RepeatButton Height="16" Margin="1" x:Name="VerticalSmallIncrease" IsTabStop="False" Template="{StaticResource VerticalIncrementTemplate}" Grid.Row="2" Interval="50" Command="ScrollBar.LineDownCommand" />
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Horizontal">
							<Setter Property="LayoutTransform" TargetName="Root">
								<Setter.Value>
									<RotateTransform Angle="-90"/>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ====================== -->
	<!-- End of ScrollBar Style -->
	<!-- ====================== -->

	<!-- ====================== -->
	<!-- Begin of ToolBar Style -->
	<!-- ====================== -->
	<Style TargetType="ToolBar">
		<Setter Property="Background" Value="{StaticResource ToolBarBackgroundBrush}" />
	</Style>

	<Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource ToobarTextColorBrush}"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontFamily" Value="{marks:ResourceFontExtension Style_ToolbarText}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<ContentPresenter x:Name="contentPresenter"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToobarDisabledTextColorBrush}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{StaticResource ToobarHilightBackgroundBrush}"></Setter>
							<Setter Property="BorderBrush" Value="#888888"></Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" Value="#045B6E"></Setter>
							<Setter Property="BorderBrush" Value="#888888"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="CheckBox">
		<Setter Property="Foreground" Value="DarkSlateBlue"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="Menu">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontStyle" Value="Italic"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Background" Value="LightSteelBlue"/>
	</Style>

	<Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Margin" Value="10,2,0,2"/>
		<Setter Property="Focusable" Value="false"/>
	</Style>
	<!-- ==================== -->
	<!-- End of ToolBar Style -->
	<!-- ==================== -->

	<!-- ======================= -->
	<!-- Begin of Expander Style -->
	<!-- ======================= -->
	<Style TargetType="Expander">
		<Setter Property="Foreground" Value="#FFFFFFFF" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Expander">
					<Grid Background="Transparent">
						<Grid.Resources>
							<Style x:Key="SLExpanderContentControl" TargetType="ContentControl">
								<Setter Property="Foreground" Value="#FF000000"/>
								<Setter Property="HorizontalContentAlignment" Value="Left"/>
								<Setter Property="VerticalContentAlignment" Value="Top"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ContentControl">
										</ControlTemplate>
									</Setter.Value>
								</Setter>
								<Setter Property="Background" Value="{StaticResource NormalBrush}"/>
							</Style>
							<LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
								<GradientStop Color="White" Offset="0"/>
								<GradientStop Color="#FFB4BECC" Offset="0.5"/>
								<GradientStop Color="#FF71839F" Offset="1"/>
							</LinearGradientBrush>
							<LinearGradientBrush x:Key="ExpanderArrowHoverFill" EndPoint="0,1" StartPoint="0,0">
								<GradientStop Color="#FFF0F8FE" Offset="0"/>
								<GradientStop Color="#FFE0F3FE" Offset="0.3"/>
								<GradientStop Color="#FF3FB5F9" Offset="1"/>
							</LinearGradientBrush>
							<LinearGradientBrush x:Key="ExpanderArrowPressedFill" EndPoint="0,1" StartPoint="0,0">
								<GradientStop Color="#FFDCF0FA" Offset="0"/>
								<GradientStop Color="#FFC5E6F7" Offset="0.2"/>
								<GradientStop Color="#FF5690D0" Offset="1"/>
							</LinearGradientBrush>
							<ControlTemplate x:Key="ExpanderDownHeaderTemplate" TargetType="ToggleButton">
								<Grid Background="Transparent">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CheckStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="00:00:00"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Checked">
												<!--                                                <Storyboard>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
														<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>-->
											</vsm:VisualState>
											<vsm:VisualState x:Name="Unchecked"/>
										</vsm:VisualStateGroup>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0"/>
												<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
												<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
												<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver"/>
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal"/>
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver"/>
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FullControlHover" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>

											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.7"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>

											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Border Padding="{TemplateBinding Padding}" CornerRadius="3,3,3,3" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" Background="{StaticResource NormalBrush}">
										<Grid Background="Transparent">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="19"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
												<Border Height="19" Width="19" Background="{StaticResource PressedBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Background"/>
												<Border Height="19" x:Name="HoverBorder" Width="19" Background="{StaticResource SelectedBackgroundBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" Opacity="0"/>
												<Path HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5">
													<Path.Stroke>
														<SolidColorBrush Color="{Binding Source={StaticResource TextBrush}, Path=Color}"/>
													</Path.Stroke>
												</Path>
											</Grid>
											<ContentPresenter HorizontalAlignment="Left" Margin="4,0,0,0" x:Name="header" VerticalAlignment="Center" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
										</Grid>
									</Border>
									<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3"/>
									<Border x:Name="FullControlHover" IsHitTestVisible="false" Visibility="Visible" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3" Opacity="0"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsChecked" Value="True">
										<Setter Property="Data" TargetName="arrow" Value="M 1,4.5 L 4.5,1 L 8,4.5" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
							<ControlTemplate x:Key="ExpanderUpHeaderTemplate" TargetType="ToggleButton">
								<Grid Background="Transparent">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CheckStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="00:00:00"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Checked">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
														<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Unchecked"/>
										</vsm:VisualStateGroup>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0"/>
												<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
												<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
												<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver"/>
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal"/>
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver"/>
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FullControlHover" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>

											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.7"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>

											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Border Padding="{TemplateBinding Padding}" CornerRadius="3,3,3,3" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" Background="{StaticResource NormalBrush}">
										<Grid Background="Transparent">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="19"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
												<Grid.RenderTransform>
													<TransformGroup>
														<TransformGroup.Children>
															<TransformCollection>
																<RotateTransform Angle="180"  CenterX="9.5" CenterY="9.5"/>
															</TransformCollection>
														</TransformGroup.Children>
													</TransformGroup>
												</Grid.RenderTransform>
												<Border Height="19" Width="19" Background="{StaticResource PressedBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Background">
													<Border.RenderTransform>
														<TransformGroup>
															<ScaleTransform/>
															<SkewTransform/>
															<RotateTransform Angle="180"  CenterX="9.5" CenterY="9.5"/>
															<TranslateTransform/>
														</TransformGroup>
													</Border.RenderTransform>
												</Border>
												<Border Height="19" x:Name="HoverBorder" Width="19" Background="{StaticResource SelectedBackgroundBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" Opacity="0">
													<Border.RenderTransform>
														<TransformGroup>
															<ScaleTransform/>
															<SkewTransform/>
															<RotateTransform Angle="180"  CenterX="9.5" CenterY="9.5"/>
															<TranslateTransform/>
														</TransformGroup>
													</Border.RenderTransform>
												</Border>
												<Path HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5">
													<Path.Stroke>
														<SolidColorBrush Color="{Binding Source={StaticResource TextBrush}, Path=Color}"/>
													</Path.Stroke>
												</Path>
											</Grid>
											<ContentPresenter HorizontalAlignment="Left" Margin="4,0,0,0" x:Name="header" VerticalAlignment="Center" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
										</Grid>
									</Border>
									<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3"/>
									<Border x:Name="FullControlHover" IsHitTestVisible="false" Visibility="Visible" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3" Opacity="0"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="ExpanderLeftHeaderTemplate" TargetType="ToggleButton">
								<Grid Background="Transparent">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CheckStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="00:00:00"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Checked">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
														<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Unchecked"/>
										</vsm:VisualStateGroup>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0"/>
												<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
												<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
												<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver"/>
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal"/>
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver"/>
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FullControlHover" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>

											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.7"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>

											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Border Padding="{TemplateBinding Padding}" CornerRadius="3,3,3,3" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" Background="{StaticResource NormalBrush}">
										<Grid Background="Transparent">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="19"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
												<Grid.RenderTransform>
													<TransformGroup>
														<TransformGroup.Children>
															<TransformCollection>
																<RotateTransform Angle="90"  CenterX="9.5" CenterY="9.5"/>
															</TransformCollection>
														</TransformGroup.Children>
													</TransformGroup>
												</Grid.RenderTransform>
												<Border Height="19" Width="19" Background="{StaticResource PressedBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Background">
													<Border.RenderTransform>
														<TransformGroup>
															<ScaleTransform/>
															<SkewTransform/>
															<RotateTransform Angle="-90"  CenterX="9.5" CenterY="9.5"/>
															<TranslateTransform/>
														</TransformGroup>
													</Border.RenderTransform>
												</Border>
												<Border Height="19" x:Name="HoverBorder" Width="19" Background="{StaticResource SelectedBackgroundBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" Opacity="0">
													<Border.RenderTransform>
														<TransformGroup>
															<ScaleTransform/>
															<SkewTransform/>
															<RotateTransform Angle="-90"  CenterX="9.5" CenterY="9.5"/>
															<TranslateTransform/>
														</TransformGroup>
													</Border.RenderTransform>
												</Border>
												<Path HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5">
													<Path.Stroke>
														<SolidColorBrush Color="{Binding Source={StaticResource TextBrush}, Path=Color}"/>
													</Path.Stroke>
												</Path>
											</Grid>
										</Grid>
									</Border>
									<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3"/>
									<Border x:Name="FullControlHover" IsHitTestVisible="false" Visibility="Visible" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3" Opacity="0"/>
									<ContentPresenter x:Name="header" VerticalAlignment="Top" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" Margin="0,42,0,0" >
										<ContentPresenter.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform Angle="90"/>
												<TranslateTransform/>
											</TransformGroup>
										</ContentPresenter.RenderTransform>
									</ContentPresenter>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="ExpanderRightHeaderTemplate" TargetType="ToggleButton">
								<Grid Background="Transparent">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CheckStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="00:00:00"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Checked">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="arrow" Storyboard.TargetProperty="Data">
														<DiscreteObjectKeyFrame KeyTime="0" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Unchecked"/>
										</vsm:VisualStateGroup>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="0"/>
												<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
												<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
												<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver"/>
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal"/>
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver"/>
												<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FullControlHover" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>

											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.7"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>

											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Border Padding="{TemplateBinding Padding}" CornerRadius="3,3,3,3" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" Background="{StaticResource NormalBrush}">
										<Grid Background="Transparent">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="19"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>

											<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
												<Grid.RenderTransform>
													<TransformGroup>
														<TransformGroup.Children>
															<TransformCollection>
																<RotateTransform Angle="-90"  CenterX="9.5" CenterY="9.5"/>
															</TransformCollection>
														</TransformGroup.Children>
													</TransformGroup>
												</Grid.RenderTransform>
												<Border Height="19" Width="19" Background="{StaticResource PressedBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Background">
													<Border.RenderTransform>
														<TransformGroup>
															<ScaleTransform/>
															<SkewTransform/>
															<RotateTransform Angle="90"  CenterX="9.5" CenterY="9.5"/>
															<TranslateTransform/>
														</TransformGroup>
													</Border.RenderTransform>
												</Border>
												<Border Height="19" x:Name="HoverBorder" Width="19" Background="{StaticResource SelectedBackgroundBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" Opacity="0">
													<Border.RenderTransform>
														<TransformGroup>
															<ScaleTransform/>
															<SkewTransform/>
															<RotateTransform Angle="90"  CenterX="9.5" CenterY="9.5"/>
															<TranslateTransform/>
														</TransformGroup>
													</Border.RenderTransform>
												</Border>
												<Path HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5">
													<Path.Stroke>
														<SolidColorBrush Color="{Binding Source={StaticResource TextBrush}, Path=Color}"/>
													</Path.Stroke>
												</Path>
											</Grid>
										</Grid>
									</Border>
									<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3"/>
									<Border x:Name="FullControlHover" IsHitTestVisible="false" Visibility="Visible" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2,2,2,2" CornerRadius="3" Opacity="0"/>
									<ContentPresenter x:Name="header" VerticalAlignment="Top" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" Margin="0,42,0,0" >
										<ContentPresenter.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform Angle="-90"/>
												<TranslateTransform/>
											</TransformGroup>
										</ContentPresenter.RenderTransform>
									</ContentPresenter>
								</Grid>
							</ControlTemplate>
						</Grid.Resources>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="ExpansionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Collapsed"/>
								<vsm:VisualState x:Name="Expanded">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="ExpandDirectionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="ExpandDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd1" Storyboard.TargetProperty="Height">
											<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="ExpandUp">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderUpHeaderTemplate}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
											<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="ExpandLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderLeftHeaderTemplate}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
											<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd0" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="ExpandRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Template">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpanderRightHeaderTemplate}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="1" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="rd0" Storyboard.TargetProperty="Height">
											<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="cd1" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="{TemplateBinding Padding}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" x:Name="rd0"/>
									<RowDefinition Height="*" x:Name="rd1"/>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" x:Name="cd0"/>
									<ColumnDefinition Width="*" x:Name="cd1"/>
								</Grid.ColumnDefinitions>

								<ToggleButton HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="1" MinHeight="0" MinWidth="0" x:Name="ExpanderButton"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
									FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}"
									FontWeight="{TemplateBinding FontWeight}"
									Foreground="{TemplateBinding Foreground}"
									Template="{StaticResource ExpanderDownHeaderTemplate}"
									Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Content="{TemplateBinding Header}"
									ContentTemplate="{TemplateBinding HeaderTemplate}"
									IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
								<Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" x:Name="ExpandSite" Visibility="Collapsed">
									<Border Background="{StaticResource NormalBrush}" CornerRadius="3,3,3,3"
										BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1,1,1,1"/>
									<ContentPresenter Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,4,4,4" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Grid>
							</Grid>
						</Border>
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="{StaticResource DisabledBackgroundBrush}" CornerRadius="3"/>
						<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" BorderBrush="{StaticResource HoverShineBrush}" BorderThickness="1" CornerRadius="3"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True">
							<Setter Property="Visibility" Value="Visible" TargetName="ExpandSite"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
	</Style>
	<!-- ===================== -->
	<!-- End of Expander Style -->
	<!-- ===================== -->

	<!-- ====================================== -->
	<!-- Begin of Position Picker's RadioButton -->
	<!-- ====================================== -->
	<Style x:Key="PositionSelectionItem" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
		<Setter Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid>
						<Border x:Name="border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="3" />
						<ContentPresenter x:Name="contentPresenter"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<Border x:Name="checked" IsHitTestVisible="False" Background="Transparent" CornerRadius="3" />
						<Border x:Name="shine" IsHitTestVisible="False" Background="Transparent" CornerRadius="3" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="shine" Property="Background" Value="{StaticResource HoverShineBrush}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{StaticResource PressedBorderBrush}"/>
							<Setter TargetName="shine" Property="Background" Value="{StaticResource HoverShineBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ==================================== -->
	<!-- End of Position Picker's RadioButton -->
	<!-- ==================================== -->

	<Style x:Key="NormalToggleButton" TargetType="ToggleButton">
		<Setter Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid>
						<Border x:Name="Background" Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<Border x:Name="HoverBorder" Opacity="0" Background="{StaticResource TextBrush}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<Border x:Name="CheckedBorder" Opacity="0" Background="#FF000000"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							x:Name="contentPresenter"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}" />
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0"
							Background="#A5FFFFFF" CornerRadius="3" />
						<Border x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed"
							BorderBrush="{StaticResource HoverShineBrush}"
							BorderThickness="1" CornerRadius="3" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{StaticResource PressedBorderBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--=======================-->
	<!-- Begin of Radio Button -->
	<!--=======================-->
	<Style x:Key="RegularRadioButton" TargetType="RadioButton">
		<Setter Property="Background" Value="{StaticResource NormalBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Padding" Value="4,1,0,0" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="16" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed" />
									<vsm:VisualTransition From="Normal" GeneratedDuration="00:00:00.3000000" To="MouseOver" />
									<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.5000000" To="Normal" />
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00.5000000" To="MouseOver" />
									<vsm:VisualTransition From="MouseOver" GeneratedDuration="00:00:00.3000000" To="Pressed" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
											Storyboard.TargetName="BackgroundOverlay"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
											Storyboard.TargetName="PressedEllipse"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="CheckStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition From="Checked" GeneratedDuration="00:00:00.5000000" To="Unchecked" />
									<vsm:VisualTransition From="Unchecked" GeneratedDuration="00:00:00.3000000" To="Checked" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unchecked" />
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
							<Ellipse Height="14" Margin="1" x:Name="Background" Width="14"
								Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
								StrokeThickness="{TemplateBinding BorderThickness}" />
							<Ellipse Height="14" Margin="1" x:Name="BackgroundOverlay" Width="14" StrokeThickness="2"
								Stroke="{StaticResource HoverBrush}" Opacity="0" />
							<Ellipse Height="14" Margin="1" x:Name="PressedEllipse" Width="14"
								StrokeThickness="{TemplateBinding BorderThickness}"
								Stroke="{StaticResource HoverBrush}" Opacity="0" />
							<Ellipse Height="6" x:Name="CheckIcon" Width="6" Opacity="0"
								Fill="{StaticResource GlyphBrush}" />
							<Ellipse Height="14" x:Name="DisabledVisualElement" Width="14" Opacity="0"
								Fill="{StaticResource DisabledBackgroundBrush}" />
							<Ellipse Height="16" x:Name="ContentFocusVisualElement" Width="16" IsHitTestVisible="false"
								Opacity="0" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" />
							<Ellipse Height="12" Margin="2,2,2,2" x:Name="ShineEllipse" Width="12"
								StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{x:Null}"
								Fill="{StaticResource ShineBrush}" />
						</Grid>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--=====================-->
	<!-- End of Radio Button -->
	<!--=====================-->

	<Style x:Key="HorizontalRadioButtonList" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel Background="Transparent" Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ListBoxItem}" >
					<Setter Property="Margin" Value="5" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<Border BorderThickness="0" Background="Transparent">
									<RadioButton Focusable="False" Style="{StaticResource RegularRadioButton}" 
										IsHitTestVisible="False"
										IsChecked="{TemplateBinding IsSelected}">
										<ContentPresenter />
									</RadioButton>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>