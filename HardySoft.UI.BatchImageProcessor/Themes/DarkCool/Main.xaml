<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:cnv="clr-namespace:HardySoft.UI.BatchImageProcessor.Classes.Converters"
	xmlns:enum="clr-namespace:HardySoft.UI.BatchImageProcessor.Model;assembly=HardySoft.UI.BatchImageProcessor.Model"
	>

	<cnv:PathToImageConverter x:Key="cnvPath2Img"></cnv:PathToImageConverter>
	<cnv:DebugConvertor x:Key="cnvDebug"></cnv:DebugConvertor>
	<cnv:ImagePathToExifConverter x:Key="cnvExif"></cnv:ImagePathToExifConverter>
	<cnv:EnumToFriendlyNameConverter x:Key="cnvFriendlyEnum"></cnv:EnumToFriendlyNameConverter>
	<cnv:WatermarkImageSelectedConverter x:Key="cnvHasWatermarkImage"></cnv:WatermarkImageSelectedConverter>
	<cnv:ColorDisplayNameConverter x:Key="cnvColorValue"></cnv:ColorDisplayNameConverter>

	<ObjectDataProvider x:Key="PositionData" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
		<ObjectDataProvider.MethodParameters>
			<x:Type TypeName="enum:WatermarkPositions" />
		</ObjectDataProvider.MethodParameters>
	</ObjectDataProvider>
	
	<ObjectDataProvider x:Key="ImageProcessTypeData" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
		<ObjectDataProvider.MethodParameters>
			<x:Type TypeName="enum:ImageProcessType" />
		</ObjectDataProvider.MethodParameters>
	</ObjectDataProvider>

	<ObjectDataProvider x:Key="DropShadowLocationData" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
		<ObjectDataProvider.MethodParameters>
			<x:Type TypeName="enum:DropShadowLocation" />
		</ObjectDataProvider.MethodParameters>
	</ObjectDataProvider>
	
	<ObjectDataProvider x:Key="OutputFileNameCaseData" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
		<ObjectDataProvider.MethodParameters>
			<x:Type TypeName="enum:OutputFileNameCase" />
		</ObjectDataProvider.MethodParameters>
	</ObjectDataProvider>
	
	<ObjectDataProvider x:Key="ApplicationSkinData" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
		<ObjectDataProvider.MethodParameters>
			<x:Type TypeName="enum:Skin" />
		</ObjectDataProvider.MethodParameters>
	</ObjectDataProvider>

	<!-- Borderless window round corner background -->
	<Style x:Key="WindowBackground" TargetType="Border">
		<Setter Property="BorderBrush" Value="#395984"></Setter>
		<Setter Property="BorderThickness" Value="3"></Setter>
		<Setter Property="CornerRadius" Value="0,20,30,40"></Setter>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush >
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="#DEDEDE" Offset="0.0"/>
							<GradientStop Color="#111111" Offset="0.5"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Borderless window title bar -->
	<Style x:Key="WindowTitle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="AliceBlue"></Setter>
		<Setter Property="Margin" Value="1"></Setter>
		<Setter Property="Padding" Value="5"></Setter>
		<Setter Property="TextAlignment" Value="Left"></Setter>
		<Setter Property="FontSize" Value="15"></Setter>
		<Setter Property="FontWeight" Value="Bold"></Setter>
		<Setter Property="FontFamily" Value="Verdana"></Setter>
		<Setter Property="TextTrimming" Value="None"></Setter>
		<Setter Property="TextDecorations" Value="None"></Setter>
		<Setter Property="BitmapEffect">
			<Setter.Value>
				<DropShadowBitmapEffect Opacity="1.0" 
					Color="Blue" Direction="320" ShadowDepth="5" Softness="0.2"/>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Hyperlink color -->
	<Style x:Key="AboutWindowHyperlink" TargetType="Hyperlink">
		<Setter Property="Foreground" Value="White"></Setter>
	</Style>

	<!-- Menu bar -->
	<Style x:Key="TopLevelMenu" TargetType="Menu">
		<Setter Property="Menu.Foreground" Value="White" />
		<Setter Property="Menu.Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
					<LinearGradientBrush.GradientStops>
						<GradientStop Color="#C0C0FF" Offset="0" />
						<GradientStop Color="Transparent" Offset="1"></GradientStop>
					</LinearGradientBrush.GradientStops>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Top level menu item, make it same as menu bar style -->
	<Style x:Key="TopLevelMenuItem" TargetType="MenuItem">
		<Setter Property="MenuItem.FontFamily" Value="Verdana"></Setter>
		<Setter Property="MenuItem.FontSize" Value="15"></Setter>
	</Style>

	<!-- Normal menu item -->
	<Style TargetType="MenuItem">
		<Setter Property="MenuItem.FontFamily" Value="Verdana"></Setter>
		<Setter Property="MenuItem.FontSize" Value="15"></Setter>
		<Setter Property="MenuItem.Foreground" Value="White" />
		<Setter Property="MenuItem.Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
					<LinearGradientBrush.GradientStops>
						<GradientStop Color="#303030" Offset="0" />
						<GradientStop Color="#7F7F7F" Offset="1"></GradientStop>
					</LinearGradientBrush.GradientStops>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- Menu Separate Bar -->
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Margin" Value="0,3,0,3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Grid>
						<Rectangle Height="1" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- Toolbar Text -->
	<Style x:Key="ToolbarText" TargetType="{x:Type TextBlock}">
		<Setter Property="TextBlock.FontFamily" Value="Verdana"></Setter>
		<Setter Property="TextBlock.FontSize" Value="14"></Setter>
		<Setter Property="VerticalAlignment" Value="Center"></Setter>
	</Style>

	<!-- Tab Control -->
	<Style TargetType="{x:Type TabItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Border Name="Border" BorderBrush="Black" 
						BorderThickness="1,1,1,1" CornerRadius="6,6,0,0">
						<Border.Background>
							<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
								<LinearGradientBrush.GradientStops>
									<GradientStop Color="#08BFE8" Offset="0" />
									<GradientStop Color="#045B6E" Offset="1"></GradientStop>
								</LinearGradientBrush.GradientStops>
							</LinearGradientBrush>
						</Border.Background>
						<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
							HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2"/>
					</Border>
					<ControlTemplate.Triggers>
						<!--<Trigger Property="IsEnabled" Value="True">
							<Setter Property="TabItem.Foreground" Value="Red"></Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TabItem.Foreground" Value="Blue"></Setter>
						</Trigger>-->
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="TabItem.Foreground" Value="White"></Setter>
						</Trigger>
						<Trigger Property="IsSelected" Value="False">
							<Setter Property="TabItem.Foreground" Value="#DCDCDC"></Setter>
							<Setter TargetName="Border" Property="Background">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
										<LinearGradientBrush.GradientStops>
											<GradientStop Color="#D3D3D3" Offset="0" />
											<GradientStop Color="#686868" Offset="1"></GradientStop>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- Label for configuration area within tab control -->
	<Style x:Key="ConfigSectionLabel" TargetType="{x:Type TextBlock}">
		<Setter Property="TextBlock.FontFamily" Value="Verdana"></Setter>
		<Setter Property="TextBlock.FontSize" Value="12"></Setter>
		<Setter Property="TextBlock.FontWeight" Value="Semibold"></Setter>
		<Setter Property="TextBlock.Foreground" Value="White"></Setter>
		<Setter Property="VerticalAlignment" Value="Center"></Setter>
		<Setter Property="TextBlock.BitmapEffect">
			<Setter.Value>
				<OuterGlowBitmapEffect GlowSize="5.0" GlowColor="#08BFE8" Opacity="1.0"/>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Label for about window -->
	<Style x:Key="AboutWindowLabel" TargetType="{x:Type TextBlock}">
		<Setter Property="TextBlock.FontFamily" Value="Calibri, Verdana"></Setter>
		<Setter Property="TextBlock.FontSize" Value="14"></Setter>
		<Setter Property="TextBlock.FontWeight" Value="Semibold"></Setter>
		<Setter Property="TextBlock.Foreground" Value="White"></Setter>
		<Setter Property="TextBlock.BitmapEffect">
			<Setter.Value>
				<OuterGlowBitmapEffect GlowSize="5.0" GlowColor="#08BFE8" Opacity="1.0"/>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Value for about window -->
	<Style x:Key="AboutWindowText" TargetType="{x:Type TextBlock}">
		<Setter Property="TextBlock.FontFamily" Value="Calibri, Verdana"></Setter>
		<Setter Property="TextBlock.FontSize" Value="14"></Setter>
		<Setter Property="TextBlock.Foreground" Value="White"></Setter>
	</Style>

	<!-- Button for configuration area within tab control -->
	<Style TargetType="Button" x:Key="FunctionButton">
		<Setter Property="FrameworkElement.Width" Value="NaN"/>
		<Setter Property="FrameworkElement.MinWidth" Value="40"/>
		<Setter Property="FrameworkElement.Height" Value="NaN"/>
		<Setter Property="FrameworkElement.MinHeight" Value="15"/>
		<Setter Property="Control.Padding" Value="10,4,10,4"/>
		<Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
		<Setter Property="TextElement.Foreground">
			<Setter.Value>
				<SolidColorBrush>#DCDCDC</SolidColorBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="TextElement.FontSize" Value="12"/>
		<Setter Property="TextElement.FontWeight" Value="SemiBold"/>
		<Setter Property="TextElement.FontFamily" Value="Verdana"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="#00FFFFFF">
						<Border BorderBrush="#FF000000" CornerRadius="6,6,6,6" BorderThickness="1,1,0,0" Opacity="0.9">
							<Border.BitmapEffect>
								<BlurBitmapEffect Radius="1" />
							</Border.BitmapEffect>
						</Border>
						<Border BorderBrush="#FFFFFFFF" CornerRadius="6,6,6,6" BorderThickness="0,0,0.6,0.6" Opacity="0.7" />
						<Border Margin="1,1,1,1" CornerRadius="6,6,6,6" Name="background">
							<Border.Background>
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<LinearGradientBrush.GradientStops>
										<GradientStop Offset="0" Color="#4000F0" />
										<GradientStop Offset="1" Color="#1000A0" />
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Border.Background>
							<Grid Margin="1,1,1,1" ClipToBounds="True">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Ellipse Margin="10,3,10,3" Width="{TemplateBinding FrameworkElement.Width}" Fill="#FFFFFFFF" Opacity="0.3" Grid.Row="0" Grid.RowSpan="2">
									<Ellipse.BitmapEffect>
										<BlurBitmapEffect />
									</Ellipse.BitmapEffect>
								</Ellipse>
								<Ellipse Width="{TemplateBinding FrameworkElement.Width}" Fill="#FFFFFFFF" Opacity="0.34" Grid.Row="0" />
							</Grid>
						</Border>
						<Border Margin="1,1,1,1" BorderBrush="#FFFFFFFF" CornerRadius="6,6,6,6" BorderThickness="5,5,0,0" Opacity="0.3">
							<Border.BitmapEffect>
								<BlurBitmapEffect Radius="1" />
							</Border.BitmapEffect>
						</Border>
						<Border Margin="1,1,1,1" BorderBrush="#FF000000" CornerRadius="6,6,6,6" BorderThickness="0,0,0.6,0.6" Opacity="1">
							<Border.BitmapEffect>
								<BlurBitmapEffect Radius="1" />
							</Border.BitmapEffect>
						</Border>
						<ContentPresenter Margin="{TemplateBinding Control.Padding}"
							HorizontalAlignment="Center" VerticalAlignment="Center"
							ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
							Content="{TemplateBinding ContentControl.Content}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<Storyboard.Children>
											<ColorAnimation To="#4000F0" FillBehavior="HoldEnd" Duration="00:00:00.4000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[0].(GradientStop.Color)" />
											<ColorAnimation To="#1000A0" FillBehavior="HoldEnd" Duration="00:00:00.4000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[1].(GradientStop.Color)" />
										</Storyboard.Children>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<Storyboard.Children>
											<ColorAnimation To="#927AFF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[0].(GradientStop.Color)" />
											<ColorAnimation To="#234BFF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[1].(GradientStop.Color)" />
										</Storyboard.Children>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="ButtonBase.IsPressed" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<Storyboard.Children>
											<ColorAnimation To="#927AFF" FillBehavior="Stop" Duration="00:00:00.4000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[0].(GradientStop.Color)" />
											<ColorAnimation To="#234BFF" FillBehavior="Stop" Duration="00:00:00.4000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[1].(GradientStop.Color)" />
										</Storyboard.Children>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<Storyboard.Children>
											<ColorAnimation To="#6E5CBF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[0].(GradientStop.Color)" />
											<ColorAnimation To="#251F40" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="background" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops).[1].(GradientStop.Color)" />
										</Storyboard.Children>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="GlassButton">
		<Setter Property="FrameworkElement.Width" Value="NaN"/>
		<Setter Property="FrameworkElement.MinWidth" Value="60"/>
		<Setter Property="FrameworkElement.Height" Value="NaN"/>
		<Setter Property="FrameworkElement.MinHeight" Value="25"/>
		<Setter Property="Control.Padding" Value="10,4,10,4"/>
		<Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
		<Setter Property="TextElement.Foreground">
			<Setter.Value>
				<SolidColorBrush>White</SolidColorBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="TextElement.FontSize" Value="10"/>
		<Setter Property="TextElement.FontWeight" Value="SemiBold"/>
		<Setter Property="TextElement.FontFamily" Value="Verdana"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Timeline1">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="Timeline2">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
						<Border x:Name="border" Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="0.507*"/>
									<RowDefinition Height="0.493*"/>
								</Grid.RowDefinitions>
								<Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
													<SkewTransform AngleX="0" AngleY="0"/>
													<RotateTransform Angle="0"/>
													<TranslateTransform X="-0.368" Y="-0.152"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#B28DBDFF" Offset="0"/>
											<GradientStop Color="#008DBDFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"/>
								<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
									<Border.Background>
										<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
											<GradientStop Color="#99FFFFFF" Offset="0"/>
											<GradientStop Color="#33FFFFFF" Offset="1"/>
										</LinearGradientBrush>
									</Border.Background>
								</Border>
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="shine" Value="0.4"/>
							<Setter Property="Background" TargetName="border" Value="#CC000000"/>
							<Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="shine" Value="0.8"/>
							<Setter Property="Background" TargetName="border" Value="#EE555555"/>
							<Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
							<Setter Property="TextElement.Foreground">
								<Setter.Value>
									<SolidColorBrush>#FFDDDDDD</SolidColorBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- List control for file selection -->
	<DataTemplate x:Key="lvFileList">
		<Border Margin="5" BorderThickness="1" BorderBrush="SteelBlue" CornerRadius="4">
			<Grid Margin="3">
				<Grid.ColumnDefinitions>
					<ColumnDefinition></ColumnDefinition>
					<ColumnDefinition Width="10*"></ColumnDefinition>
				</Grid.ColumnDefinitions>
                
				<CheckBox Grid.Column="0" IsChecked="{Binding Path=FileSelected}"></CheckBox>

				<TextBlock Grid.Column="1" Text="{Binding Path=FilePath}">
					<TextBlock.ToolTip>
						<StackPanel>
							<Image Width="100" Stretch="Fill" Source="{Binding Path=FilePath}"></Image>
						</StackPanel>
					</TextBlock.ToolTip>
				</TextBlock>
			</Grid>
		</Border>
	</DataTemplate>
    
	<!-- Textboxes for configurations -->
	<Style x:Key="cfgTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="#F1F894" />
		<Setter Property="FontFamily" Value="Calibri, Tahoma, Arial" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Height" Value="25"/>
		<Setter Property="Width" Value="450"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border Name="Border" CornerRadius="6,6,6,6" Padding="2" BorderThickness="1" BorderBrush="#FFEBECC2">
						<ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							x:Name="PART_ContentHost">
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Border.Background">
								<Setter.Value>
									<SolidColorBrush Opacity="0.4" Color="#CCCCCC" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsFocused" Value="False">
							<Setter TargetName="Border" Property="Background">
								<Setter.Value>
									<SolidColorBrush Opacity="1" Color="#353533" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="#EEE"></Setter>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Style of GridView Header -->
	<Style x:Key="GridViewHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
					<LinearGradientBrush.GradientStops>
						<GradientStop Color="#282828" Offset="0" />
						<GradientStop Color="#CFCFCF" Offset="1"></GradientStop>
					</LinearGradientBrush.GradientStops>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
        
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="True">
				<Setter Property="Foreground" Value="White"></Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#C0C0C0"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Style of Sortable GridView Up Arrow -->
	<DataTemplate x:Key="HeaderTemplateArrowUp">
		<DockPanel>
			<TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
			<Path x:Name="arrow" StrokeThickness="1" Fill="#B9B9B9" Data="M 5,10 L 15,10 L 10,5 L 5,10"/>
		</DockPanel>
	</DataTemplate>

	<!-- Style of Sortable GridView Down Arrow -->
	<DataTemplate x:Key="HeaderTemplateArrowDown">
		<DockPanel>
			<TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
			<Path x:Name="arrow" StrokeThickness="1" Fill="#B9B9B9" Data = "M 5,5 L 10,10 L 15,5 L 5,5"/>
		</DockPanel>
	</DataTemplate>

	<!-- Style of GridView Transparent Header -->
	<DataTemplate x:Key="HeaderTemplateTransparent">
		<DockPanel>
			<TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
			<Path x:Name="arrow" StrokeThickness="1" Fill="Transparent" Data="M 5,5 L 10,10 L 15,5 L 5,5"/>
		</DockPanel>
	</DataTemplate>

	<!-- Style of GridView Line Styles, including Alternate lines -->
	<Style x:Key="AlternatingListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
		<Style.Triggers>
			<Trigger Property="ItemsControl.AlternationIndex" Value="0">
				<Setter Property="Background" Value="LightBlue"></Setter>
			</Trigger>
			<Trigger Property="ItemsControl.AlternationIndex" Value="1">
				<Setter Property="Background" Value="MediumSeaGreen"></Setter>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Background" Value="Pink"></Setter>
			</Trigger>
		</Style.Triggers>
		<!--
		<Setter Property="ToolTip">
			<Setter.Value>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition></ColumnDefinition>
						<ColumnDefinition></ColumnDefinition>
					</Grid.ColumnDefinitions>

					<GridSplitter Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="15" Background="Transparent" ShowsPreview="True"/>
				</Grid>
			</Setter.Value>
		</Setter>
		-->
	</Style>
	
	<!-- ================= -->
	<!-- Style of Combobox -->
	<!-- ================= -->

	<!-- ComboBox Toggle Button -->
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid TextBlock.Foreground="Black" TextBlock.FontSize="25">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition Width="20"/>
			</Grid.ColumnDefinitions>
			<Rectangle x:Name="Rectangle"
					Grid.ColumnSpan="2"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					Width="Auto" Height="Auto"
					RadiusX="5" RadiusY="5"
					TextBlock.Foreground="Black">
				<Rectangle.Fill>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#EEE" Offset="0.0"/>
						<GradientStop Color="#CCC" Offset="1.0"/>
					</LinearGradientBrush>
				</Rectangle.Fill>
				<Rectangle.Stroke>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#CCC" Offset="0.0"/>
						<GradientStop Color="#444" Offset="1.0"/>
					</LinearGradientBrush>
				</Rectangle.Stroke>
			</Rectangle>
			<Rectangle Grid.Column="0"
					HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
					Width="Auto" Height="Auto"
					RadiusX="5" RadiusY="5"
					TextBlock.Foreground="Black">
				<Rectangle.Fill>
					<SolidColorBrush Color="Transparent"/>
				</Rectangle.Fill>
				<Rectangle.Stroke>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#CCC" Offset="0.0"/>
						<GradientStop Color="#444" Offset="1.0"/>
					</LinearGradientBrush>
				</Rectangle.Stroke>
			</Rectangle>
			<Path x:Name="Arrow"
					Grid.Column="1"
					HorizontalAlignment="Center" VerticalAlignment="Center"
					Data="M 0 0 L 4 4 L 8 0 Z">
				<Path.Fill>
					<SolidColorBrush Color="#444"/>
				</Path.Fill>
			</Path>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Fill" TargetName="Rectangle">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
							<GradientStop Color="#FFF" Offset="0.0"/>
							<GradientStop Color="#AAA" Offset="1.0"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Fill" TargetName="Rectangle">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
							<GradientStop Color="#BBB" Offset="0.0"/>
							<GradientStop Color="#EEE" Offset="0.1"/>
							<GradientStop Color="#EEE" Offset="0.9"/>
							<GradientStop Color="#FFF" Offset="1.0"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Fill" TargetName="Rectangle">
					<Setter.Value>
						<SolidColorBrush Color="#EEE"/>
					</Setter.Value>
				</Setter>
				<Setter Property="Stroke" TargetName="Rectangle">
					<Setter.Value>
						<SolidColorBrush Color="#AAA"/>
					</Setter.Value>
				</Setter>
				<Setter Property="Foreground">
					<Setter.Value>
						<SolidColorBrush Color="#888"/>
					</Setter.Value>
				</Setter>
				<Setter Property="Fill" TargetName="Arrow">
					<Setter.Value>
						<SolidColorBrush Color="#888"/>
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ComboBox TextBox -->
	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<!-- This must be named as PART_ContentHost -->
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
	</ControlTemplate>

	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Foreground" Value="Black"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<!-- The ToggleButton is databound to the ComboBox itself to toggle IsDropDownOpen -->
						<ToggleButton x:Name="ToggleButton"
								Grid.Column="2"
								Template="{DynamicResource ComboBoxToggleButton}"
								Foreground="Black"
								Focusable="false"
								IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								ClickMode="Press"/>
						<ContentPresenter x:Name="ContentSite"
								HorizontalAlignment="Left" VerticalAlignment="Center"
								Margin="3,3,23,3"
								Content="{TemplateBinding SelectionBoxItem}"
								ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								IsHitTestVisible="False"/>

						<!-- The TextBox must be named PART_EditableTextBox or ComboBox will not recognize it -->
						<TextBox x:Name="PART_EditableTextBox"
								Visibility="Hidden"
								Template="{DynamicResource ComboBoxTextBox}"
								HorizontalAlignment="Left"
								Margin="3,3,23,3" VerticalAlignment="Center"
								Style="{x:Null}" Focusable="True" Background="Transparent"
								IsReadOnly="{TemplateBinding IsReadOnly}"/>

						<!-- The Popup shows the list of items in the ComboBox. IsOpen is databound to IsDropDownOpen which is toggled via the ComboBoxToggleButton -->
						<Popup x:Name="Popup"
								IsOpen="{TemplateBinding IsDropDownOpen}"
								Placement="Bottom" Focusable="False"
								AllowsTransparency="True" PopupAnimation="Slide">
							<Grid x:Name="DropDown"
									MaxHeight="{TemplateBinding MaxDropDownHeight}"
									MinWidth="{TemplateBinding ActualWidth}"
									SnapsToDevicePixels="True">
								<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource SolidBorderBrush}"
										BorderThickness="1">
									<Border.Background>
										<SolidColorBrush Color="#FFF"/>
									</Border.Background>
								</Border>
								<ScrollViewer
										Margin="4,6,4,6"
										Style="{DynamicResource PropertyGridScrollViewer}"
										SnapsToDevicePixels="True"
										HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
										CanContentScroll="True">
									<!-- The StackPanel is used to display the children by setting IsItemsHost to be True -->
									<StackPanel IsItemsHost="True"
											KeyboardNavigation.DirectionalNavigation="Contained"/>
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<!-- This forces the DropDown to have a minimum size if it is empty -->
						<Trigger Property="HasItems" Value="false">
							<Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground">
								<Setter.Value>
									<SolidColorBrush Color="#888"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
							<Setter Property="CornerRadius" Value="4" TargetName="DropDownBorder"/>
							<Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder"/>
						</Trigger>
						<Trigger Property="IsEditable" Value="true">
							<Setter Property="IsTabStop" Value="false"/>
							<Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
							<Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- WPG ComboBoxItem -->
	<Style TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Grid SnapsToDevicePixels="true">
						<Border x:Name="Border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"/>
						<ContentPresenter
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<!-- Change IsHighlighted SelectedBackgroundBrush to set the selection color for the items -->
						<Trigger Property="IsHighlighted" Value="true">
							<Setter Property="Background" TargetName="Border">
								<Setter.Value>
									<SolidColorBrush Color="#DDD"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground">
								<Setter.Value>
									<SolidColorBrush Color="#888"/>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ======================== -->
	<!-- End of Style of Combobox -->
	<!-- ======================== -->

	<!-- ================= -->
	<!-- Style of Checkbox -->
	<!-- ================= -->

	<!-- CheckBoxFocusVisual Style -->
	<Style x:Key="CheckBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- CheckBox Style -->
	<Style TargetType="{x:Type CheckBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush Color="#FFF"/>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#CCC" Offset="0.0"/>
					<GradientStop Color="#444" Offset="1.0"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid Width="13" Height="13">
								<Border x:Name="Border" Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"/>
								<Path x:Name="CheckMark"
										StrokeThickness="2" SnapsToDevicePixels="False"
										Data="M 0 0 L 13 13 M 0 13 L 13 0">
									<Path.Stroke>
										<SolidColorBrush Color="#444"/>
									</Path.Stroke>
								</Path>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								RecognizesAccessKey="True"/>
					</BulletDecorator>

					<!-- This uses Visibility to hide and show the CheckMark on IsChecked -->
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Border">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FFF" Offset="0.0"/>
										<GradientStop Color="#AAA" Offset="1.0"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="Border">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#BBB" Offset="0.0"/>
										<GradientStop Color="#EEE" Offset="0.1"/>
										<GradientStop Color="#EEE" Offset="0.9"/>
										<GradientStop Color="#FFF" Offset="1.0"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush" TargetName="Border">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#444" Offset="0.0"/>
										<GradientStop Color="#888" Offset="1.0"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Border">
								<Setter.Value>
									<SolidColorBrush Color="#EEE"/>
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush" TargetName="Border">
								<Setter.Value>
									<SolidColorBrush Color="#AAA"/>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- ======================== -->
	<!-- End of Style of Checkbox -->
	<!-- ======================== -->
</ResourceDictionary>